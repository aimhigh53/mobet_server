# Generated by Django 3.0.5 on 2020-05-11 13:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('mobet_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='categoryList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CATEGORY', models.CharField(max_length=20)),
            ],
            options={
                'ordering': ('CATEGORY',),
            },
        ),
        migrations.CreateModel(
            name='competitionSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ROOMNAME', models.CharField(default='', max_length=15)),
                ('STARTDATE', models.DateTimeField()),
                ('DUEDATE', models.DateTimeField()),
                ('SETTINGMONEY', models.IntegerField()),
                ('RECENTPAYAVGMIN', models.IntegerField()),
                ('RECENTPAYAVGMAX', models.IntegerField()),
                ('OPEN', models.BooleanField(default=True)),
                ('CATEGORYCODE', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='competition_category', to='mobet_app.categoryList')),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='CI',
        ),
        migrations.AlterField(
            model_name='user',
            name='RECENTPAYAVG',
            field=models.IntegerField(null=True),
        ),
        migrations.CreateModel(
            name='userRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GRADE', models.CharField(default='', max_length=5)),
                ('POINTS', models.IntegerField()),
                ('WINRECORD', models.IntegerField()),
                ('GAMECOUNT', models.IntegerField()),
                ('USER_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_rank', to='mobet_app.User')),
            ],
            options={
                'ordering': ('-POINTS',),
            },
        ),
        migrations.CreateModel(
            name='userGameRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SUCCESSES', models.BooleanField(default=False)),
                ('RECORDDATE', models.DateTimeField(auto_now=True)),
                ('GAMEGRADE', models.IntegerField(default=1)),
                ('ROOMNUM_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_record_room', to='mobet_app.competitionSet')),
                ('USER_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_record_user', to='mobet_app.User')),
            ],
            options={
                'ordering': ('ROOMNUM_ID', 'GAMEGRADE'),
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('USERONE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationship_one', to='mobet_app.User')),
                ('USERTWO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationship_two', to='mobet_app.User')),
            ],
            options={
                'ordering': ('USERONE',),
            },
        ),
        migrations.CreateModel(
            name='participatedList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ROOMNUM_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participated_room', to='mobet_app.competitionSet')),
                ('USER_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participated_user', to='mobet_app.User')),
            ],
            options={
                'ordering': ('ROOMNUM_ID',),
            },
        ),
        migrations.CreateModel(
            name='notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ALARM', models.BooleanField(default=False)),
                ('OWNER_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='mobet_app.User')),
                ('ROOMNAME', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_room', to='mobet_app.competitionSet')),
            ],
            options={
                'ordering': ('OWNER_ID',),
            },
        ),
        migrations.CreateModel(
            name='financeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PAYMENTTIME', models.DateTimeField(auto_now=True)),
                ('PAYMENTPRICE', models.IntegerField()),
                ('INANDOUT', models.BooleanField(default=True)),
                ('CATEGORYCODE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finance_category', to='mobet_app.categoryList')),
                ('USER_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finance', to='mobet_app.User')),
            ],
            options={
                'ordering': ('PAYMENTTIME',),
            },
        ),
        migrations.AddField(
            model_name='competitionset',
            name='OWNER_ID',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='competition_owner', to='mobet_app.User'),
        ),
    ]
